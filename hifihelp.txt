.topic NoContext=0
 {Hi-Files, администратор Вашей файлопомойки .):NoContext}▄
  ▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀

■ Общий трёп:
  {About}
  {Командная строка:AboutCmdLine}

■ Функциональные средства:
  {Администратор:AboutFileBaseManager}
  {Генератор файл-листов:AboutFilGen}
  {Постер отчётов:AboutPoster}
  {Поиск файлов по запросам:AboutFinder}
  {Файлэхопроцессор:AboutFEchoProc}
  {Интерпретатор скриптов:AboutScript}

.topic AboutCmdLine
 {Как запускать?:AboutCmdLine}▄
  ▀▀▀▀▀▀▀▀▀▀▀▀▀▀

Ну, что при запуске Hi-Files без параметров стартует диалоговая среда,
Вы, вероятно, уже поняли .)

■ Параметры:

 ?
Примерно тот текст, что Вы сейчас читаете ;-)

 CFG=<cfg-name>
Использовать конфигурационный файл <cfg-name> вместо дефолтного
hifiles.cfg, лежащего рядом с exe-шником.

 GEN
Запуск фазы файллист-генератора;

 TIC
Тоссинг тиков;

 AFIX
Менеджер подписки файлэхопроцессора;

 FIND
Финдер.

 HATCH[=имя_управляющего_файла]
{Пакетный хатчер:BatchHatch}


■ Применительно к "GEN" можно указывать следующие опции:

 -NOREP
Запрет генерации отчетов;

 -NOSCAN
Запрет сканирования файловых областей;

 -FORCE
Принудительно выдернуть из архивов описатели, если они там есть;

 -UPDATE
То же, что и "-FORCE", только если файл еще не описан;

 -READONLY
Запрещает модификацию files.bbs.

■ Отладочные фичи:

 -DEBUG=SCRIPT
Включает трассировку выполнения скрипта в лог. Используйте этот режим с
осторожностью, так как лог-файл при этом может получиться офигенного
размера ;-)

 -DEBUG=TRACE
В окне инспектора выполнения скрипта мелькают текущие строки.

■ Коды возврата:

0 - Обычное завершение;

1 - В процессе сканирования файловой базы был обнаружен по крайней мере
один новый файл.

■ Переменные окружения:

 LOG_PATH
Задаёт путь к каталогу, где будет создаваться лог-файл, если не
устраивает его стандартное расположение (рядом с EXE-шником). Указывать
нужно ТОЛЬКО каталог, без собственно имени файла, например:

 SET LOG_PATH=C:\FIDO\LOG

.topic About
                                         (tm)
           ▐█ █ ▐█   ██ ▐█ ▐█  ▐██ ▐███
           ▐█▄█ ▐█ ■ █▄ ▐█ ▐█  ▐█▄ ▐█▄▄
           ▐█ █ ▐█   █  ▐█ ▐██ ▐█▄  ▄▄█
         ────────────────────────────────────
                    Version 2.3*
         Copyright (c) 1997-2005 Dmitry Liman
         ────────────────────────────────────


Hi-Files представляет собой многофункциональный инструмент для
обслуживания файловой базы FidoNet-совместимой станции.

С его помощью Вы получаете возможность в диалоговом режиме строить
описание файловой базы, редактировать файловые комментарии, перемещать
(удалять) сами файлы, просматривать их содержимое, и т.д. и т.п... Формат
описания базы совместим с Tornado BBS, файловые комментарии хранятся в
формате files.bbs. Все конфигурационные файлы Hi-Files - текстовые,
так что настройки можно выполнять как при помощи внутренних диалоговых
средств Hi-Files, так и путём прямого редактирования конфигурационных
файлов.

Анализатор базы позволяет следить за появлением новых или исчезновением
старых файлов, извлекать описатели из архивов или строить их при помощи
внешних плагинов для файлов вроде mp3, mod, xm, jpg, gif, bmp и т.п.

Генератор файл-листов позволяет строить как список всех файлов, так и
только новых (за последние n дней) или наиболее часто скачиваемых
файлов (если, конечно, files.bbs ведётся со счётчиками скачиваний).
Внешний вид файл-листов полностью определяется пользователем: Hi-Files
содержит интерпретатор встроенного языка программирования, на котором,
собственно, и записывается программа генерации файл-листа. Кроме того,
генератор может строить список freq-каталогов для Вашего мейлера и умеет
заглядывать в его список freq-алиасов.

Информацию о поступлении новых файлах можно также рассылать в виде
анонсов в эху или нетмейлом. Технология рассылки такова, что не зависит
от типа используемой Вами базы сообщений, работа осуществляется на уровне
PKT-файлов, которые обрабатывает Ваш тоссер.

Hi-Files умеет отвечать на запросы о поиске файлов (в эхе или нетмейлом)
аналогично тому, как это делает файлэхопроцессор AllFix.

Кстати, о файлэхопроцессорах .) У нас есть свой, встроенный.
Полнофункциональный, с менеджером подписки, passthrough-эхами, форвард-
реквестами, аккуратно работающий в BSO-режиме и T-Mail long name file
boxes.

 ■ Лицензионное соглашение

Данное программное обеспечение (ПО) является свободным (freeware).
Вы можете свободно распространять данное ПО и/или вносить в него
изменения в соответствии с Лицензией GNU GPL. Данное ПО распространяется
в надежде, что оно будет полезным, но БЕЗ КАКИХ-ЛИБО ГАРАНТИЙ,
даже без подразумеваемой гарантии коммерческой ценности и пригодности
для конкретной цели. Для получения подробных сведений смотрите
оригинальный текст GNU General Public License.

 ■ Контактная информация

Свежую версию Hi-Files Вы можете взять в Интернете на сайтах поддержки:

 http://hi-files.narod.ru

Разумеется, самый последний Hi-Files всегда можно фрекнуть по алиасу
HIFILES на моём узле FidoNet 2:461/79. Сюда же присылайте сообщения об
ошибках, пожелания и поздравления .) Для больших сообщений лучше
воспользоваться Интернетом: <leemon@list.ru>

■ С наилучшими пожеланиями, я :)

.topic MenuFileGarbage=100
В этом разделе меню собраны команды администратора файловой базы.

.topic MenuOpenAreas=101
Вызов {Менеджера Файловых Областей:AreaMgr}

.topic MenuOpenEchoes=102
Вызов {Менеджера файл-эх:FileEchoManager}

.topic MenuSetupFilesBbs=103
Настройка {параметров files.bbs:SetupFilesBbs}

.topic MenuSetComments=104
В этом разделе собраны настройки, управляющие построением файловых
комментариев.

.topic MenuSetupDiz=105
Открывает окно внутриархивных описателей, где Вы указываете, какие файлы
Hi-Files должен выдирать из архива для построения его описания.

.topic MenuSetupArc=106
Здесь Вы указываете команды вызова установленых в Вашей системе
архиваторов для извлечения комментариев из архивов.

.topic MenuSetupFetch=107
Здесь Вы указываете команды вызова внешних программ, которые умеют
строить описатели для определённого типа файлов (например, музыкальных
или картинок).

.topic MenuSetupDefCmt=108
Здесь Вы перечисляете "стандартные" описатели, которые Hi-Files
присвоит файлам, для которых не удалось построить комменарий путём вызова
архиватора или другой внешней генерилки. Чтобы было не совсем скучно, эти
"стандартные" описатели могут быть различными для файлов с разными
расширениями.

.topic MenuBadStrings=109
Вызывает окно редактора "плохих" строк, которые Вы навсегда хотите
исключить из файловых комментариев (например, всякие навязчивые лого
разных хакерских групп .)

.topic MenuSetupExclude=132
Вызывает окно редактора масок файлов, которые никогда не должны попадать
в files.bbs (как, например, сам 'files.bbs', который всегда должен
присутствовать на первом месте в этом списке).

.topic MenuGen=110
В этом разделе собраны средства настройки генератора файл-листов, отчётов
и финдера.

.topic MenuGenFiles=111
Открывает диалог задания имён управляющих файлов генератора: файл-листов,
программ-сценариев и т.п.

.topic MenuGenScan=112
Открывает диалог настройки анализатора файловой базы.

.topic MenuSetupPoster=113
Открывает диалог настройки системы рассылки отчётов.

.topic MenuAlwaysOld=114
Здесь Вы перечисляете файлы, которые никогда не должны попасть в отчёт о
новых файлах (например, сам файл-лист новых файлов).

.topic MenuSetupFinder=115
Настройки подсистемы поиска файлов по запросам в эхе или нетмейлом.

.topic MenuNewFileAreaCtl=116
Здесь Вы указываете, где находится файл описания файловых областей
(FileArea.Ctl).

.topic MenuJob=117
В этом разделе собраны команды запуска функциональных модулей Hi-Files,
то есть просто интерактивные аналоги соответствующих параметров командной
строки.

.topic MenuJobHatch=118
Запуск интерактивного хатчера, что в переводе обозначает "запузырить
файл в некоторую файл-эху" ;-)

.topic MenuJobGen=124
Запуск фазы генератора отчётов/файл-листов. Интерактивный аналог
{параметра:AboutCmdLine} командной строки '-GEN'.

.topic MenuFTN=120
Открывает диалог настройки параметров Вашей FTN-станции.

.topic MenuFEchoProc=121
Открывает диалог общих настроек встроенного файлэхопроцессора.

.topic MenuLinks=122
Вызывает менеджер Ваших линков по файл-эхам.

.topic MenuColors=123
Ну, если Вам соффсем нечего делать, можете цвета пораскрашивать ;-)

.topic MenuSetup=119
В этом разделе собраны команды общей настройки Hi-Files, не относящиеся
непосредственно к ведению файловой базы.

.topic MenuHelp=130
Из этого раздела меню Вы можете обращаться к различным информационным
ресурсам Hi-Files.

.topic MenuForw=131
Натройка форвард-реквестов.

.topic MenuFileApi=133
Открывает диалог настройки режимов API имён файлов.

.topic MenuFinderOpt=134
Настройка общих параметров подсистемы финдера.

.topic MenuFinderArea=135
Настройка эхо-областей, в которых будет действовать подсистема финдера.

.topic MenuFinderRobots=136
Задание имён "роботов", на которые будет откликаться подсистема финдера.

.topic MenuQuit=137
Это - очень секретный и опасный пункт меню, никогда его не нажимайте .)

.topic BusyWaiting=1000
Похоже, что в настоящий момент параллельно работает другая копия Hi-
Files, и Вам лучше подождать.

Подобная ситуация может возникнуть, если предыдущий запуск Hi-Files был
прерван хирургическим методом вроде кнопки Reset - в таких случаях на
диске остаётся "залипший" флаг занятости (файл hifiles.bsy,
расположенный в том же каталоге, что и hifiles.exe).

Чтобы не подвесить автопилотную систему, Hi-Files проверяет время
создания флага занятости, и считает его "залипшим", если он создан более
30 минут назад. Такой флаг автоматически прибивается и окно ожидания не
появляется вообще.

Если Вы уверены, что в данный момент всё-же выполнение приостановлено из-
за "залипшего" флага, нажмите в диалоге ожидания кнопку [Прибить флаг].

.topic SelectArea
Выберите нужную файловую область.

.topic DelFD
Вы захотели удалить указанный файл из файловой базы, и теперь необходимо
конкретизировать свои пожелания.

Включите флаг [Дескриптор], если хотите удалить упоминание о данном
файле из соответствующего files.bbs.

Включите флаг [Файл на диске], если хотите физически стереть данный файл
с диска.

Флажки совершенно независимы, то есть удаление файла не влечёт за собой
автоматическое удаление его дескриптора из files.bbs и наоборот.

.topic SetupViewers
Это диалог настройки внешних программ просмотра содержимого файлов в
Вашей базе.

Каждая строка списка должна начинаться с маски файла, через пробел после
которой должна следовать команда вызова соответствующей внешней программы
со всеми необходимыми ключами.

Когда в {окне файловой области:AreaPane} Вы нажмёте кнопку [Просмотр],
Hi-Files последовательно проанализирует данный список, пока не встретит
первую подходящую для текущего файла маску, после чего исполнит указанную
после маски команду. Полное имя файла для просмотра будет добавлено
последним в строку вызова гляделки.

■ Примечания:

1. Не забудьте нажать кнопку [Заменить] после того, как измените
содержимое текущей строки списка ;-)

2. Для перемещения строки вверх-вниз по списку используйте стрелки при
нажатой клавише "Shift".

■ Пример списка:

 ┌──────────────────────┐
 │ *.rar  rar.exe       │
 │ *.html htmlview.exe  │
 │ *      hiew.exe      │
 └──────────────────────┘

Для вызываемых программ по умолчанию подставляется расширение '.exe'.
Если не указан путь вызова программы, она будет искаться сначала в том же
каталоге, что и hifiles.exe, а затем в %PATH%.

.topic MoreDLPath
Это окно редактирования дополнительных каталогов даунлоада текущей
файловой области.

Первый каталог из этого списка считается "первичным" (primary download
path), и используется всюду, где требуется каталог по умолчанию.

■ Примечания:

1. Не забудьте нажать кнопку [Заменить] после того, как измените
содержимое текущей строки списка ;-)

2. Для перемещения строки вверх-вниз по списку используйте стрелки при
нажатой клавише "Shift".

3. Каждая файловая область должна иметь хотя бы один каталог даунлоада.

.topic SetupArea
 {Настройка файловой области:SetupArea}▄
  ▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
 ┌─────────────────────────────────────┐
 │Имя области                          │
 └─────────────────────────────────────┘
Собственно, наименование текущей файловой области. Никаких ограничений,
лишь бы не дублировалось.

 ┌─────────────────────────────────────┐
 │Файл-лист                            │
 └─────────────────────────────────────┘
Полное имя файла, содержащего файловые дескрипторы. Обычно, это
files.bbs, расположенный в первичном каталоге даунлоада. Этот каталог
можно выбрать в диалоге, нажав кнопку [PDP] - "Primary Download Path".
В случае успешного выбора автоматически заполняются поля 'FileList', 'DL
Path' и 'UL Path', список каталогов даунлоада очищается, после чего в
него заносится единственным элементом выбраный Вами каталог.

 ┌─────────────────────────────────────┐
 │Group tag                            │
 └─────────────────────────────────────┘
Некое символическое имя группы, объединяющей одну или несколько файловых
областей. Используется только Вами.

 ┌─────────────────────────────────────┐
 │Download path                        │
 └─────────────────────────────────────┘
Каталог, в котором хранятся файлы данной области. Область может иметь
более одного такого каталога, для редактирования которых нажмите кнопку
[Другие].

 [ ] Дерево

Если включено, то непосредственно перед каждым сканированием данной
области в список её дополнительных DL-Path будут автоматически
добавляться все каталоги, растущие из её Primary Download Path.

 ┌─────────────────────────────────────┐
 │Upload path                          │
 └─────────────────────────────────────┘
Каталог, в который должны помещаться файлы при аплоаде пользователем в
данную файловую область. Может совпадать с Download path, а может и нет.
А может быть вообще единым для всех файловых областей. Hi-Files этот
параметр игнорирует. При помощи кнопки [Единый] можно легко задавать один
и тот же каталог аплоада для нескольких областей.

 ┌ Формат файл-листа ────┐
 │() files.bbs          │
 │( ) cd-list            │
 └───────────────────────┘
Вообще-то, Hi-Files этот параметр игнорирует (считается, что формат
всегда files.bbs), а этот переключатель просто меняет соответствующий
параметр в файле FileArea.Ctl для Tornado.

 ┌ Опции Tornado ────────┐
 │[ ] Сканировать        │
 │[ ] DL локально        │
 └───────────────────────┘
 ┌───────────────────────┐
 │Download securiry      │
 │Upload security        │
 │List security          │
 │Show security          │
 └───────────────────────┘
Это всё Торнадовские параметры, смотрите в ейную документацию.

 ┌────────────────────────────┐
 │ [ ] Недоступна для фреков  │
 └────────────────────────────┘
Если включено, все DL-path данной области будут исключены из
экспортируемого списка каталогов для файловых запросов (FReq).

Обратите внимание, что данная настройка не оказывает влияния на попадание
области в файл-лист, для этих целей используйте средства скриптового
языка.

 ┌ Свободные коммент───┐
 │() По умолчанию     │
 │( ) Разрешены        │
 │( ) Запрещены        │
 └─────────────────────┘
Перекрытие (override) общих настроек свободных комментариев применительно
к текущей файловой области. Общие настройки задаются в диалоге настроек
{files.bbs:SetupFilesBbs}.

См. также {Свободные комментарии:AboutAloneCmt}

 ┌ Сортировка ─────────┐
 │() По умолчанию     │
 │( ) Разрешена        │
 │( ) Запрещена        │
 └─────────────────────┘
Перекрытие (override) общих настроек алфавитной сортировки файлов в
files.bbs. Общие настройки задаются в диалоге настроек
{files.bbs:SetupFilesBbs}.

 ┌ Поиск новых файлов──┐
 │() По умолчанию     │
 │( ) Разрешен         │
 │( ) Запрещен         │
 └─────────────────────┘
Перекрытие (override) общих настроек поиска новых файлов в каталогах
даунлоада текущей файловой области. Общие настройки задаются в диалоге
настроек {files.bbs:SetupFilesBbs}.

.topic UseCUP
 {Единый каталог аплоада:UseCUP}▄
  ▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀

Посредством этого диалога Вы можете задавать единый каталог аплоада для
нескольких файловых областей. Имя такого каталога сохраняется в
конфигурационном файле Hi-Files и будет доступно при последующих его
запусках.

.topic AreaPane
 {Окно файловой области:AreaPane}▄
  ▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀

Перед Вами - средство просмотра содержимого файловой области.

Слева - список файлов, справа - комментарий к текущему (в списке) файлу.
В нижней части окна появляется LFN текущего файла и другая полезная
информация.

■ Кнопки:

 [Просмотр]
Вызывает внешнюю программу (гляделку) для просмотра содержимого текущего
файла. Для настройки интерфейса к таким программам нажмите кнопку
[Гляделки].

 [В другую]
Перемещает текущий файл (как физический файл на диске, так и его
дескриптор в files.bbs) в другую файловую область. В качестве каталога-
приёмника используется первичный каталог даунлоада области-получателя.

 [Удалить]
Удаление текущего файла с диска и/или его дескриптора из files.bbs

 [Свободный]
Вставляет {свободный комментарий:AboutAloneCmt} перед текущим файлом в
списке.

 [Вернуть]
Восстанавливает текст файлового комментария, каким он был до
редактирования. Текст переносится в files.bbs при смене текущего файла в
списке.

 [Гляделки]
Открывает диалог настройки внешних программ просмотра содержимого файлов.

Файлы в списке можно помечать клавишей "пробел", в этом случае кнопки
[Удалить] и [В другую] будут воздействовать на все помеченые файлы.
Перемещённые файлы останутся помеченными и в области-приёмнике. Свободные
комментарии не перемещаются, если в области-приёмнике их использование
отключено. Пометить все файлы сразу можно серым плюсом, снять все пометки
- серым минусом.

Если для текущей фаловой области отключена сортировка либо разрешены
свободные комментарии, файлы в списке можно передвигать на другую
позицию, для этого, удерживая Shift, тащите нужный файл стрелками.

.topic AboutAloneCmt
 {Свободные комментарии:AboutAloneCmt}▄
  ▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀

Кроме "файловых" комментариев, смысл которых заключается в описании
конкретных файлов в базе, Hi-Files поддерживает ещё и "свободные" (или
отвязанные :), которые не связаны непосредственно с каким-либо конкретным
файлом, а живут в списке области "сами по себе".

Свободные комментарии удобно использовать для выделения "подобласти"
(subarea) внутри единой файловой области.

С точки зрения формата files.bbs комментарий идентифицируется как
свободный, если его текст начинается с номера позиции больше 1, но меньше
той, с которой начинаются продолжения многострочных комментариев.

■ Обратите внимание:

Если для области с разрешёнными свободными комментариями включена
алфавитная сортировка дескрипторов, то сортироваться будет не вся область
насквозь, а в отдельности каждая подобласть, заключённая между двумя
свободными комментариями, или свободным комментарием и началом (концом)
файловой области.

.topic SelLinks
Перед Вами список всех Ваших линков по файл-эхам. Переключателем справа
установите требуемые права доступа к файл-эхе текущему линку и нажмите
кнопку [Установить].

.topic SelectHost
Выберите {хост-область:AboutHostArea} для данной файл-эхи, или нажмите
кнопку [Passthrough], если файл-эха должна быть "проходящей".

Когда Вы гуляете по списку, под ним отображается первичный каталог
даунлоада для выбранной области (сюда будут переноситься пришедшие по
файл-эхе файлы).

.topic AboutHostArea
 {Хост-Области:AboutHostArea}▄
  ▀▀▀▀▀▀▀▀▀▀▀▀

Hi-Files рассматривает файл-эхи исключительно как средство (технологию?)
маршрутизируемого транспорта файлов, все остальные моменты, связанные с
хранением полученных файлов, ведением files.bbs, анонсами новых файлов и
т.п. рассматриваются, как свойства файловой области, которой "придаётся"
данная файл-эха. Такая файловая область считается хост-областью данной
файл-эхи. Одна файловая область может являться хостом для более, чем
одной файл-эхи, но одна файл-эха не может хоститься более, чем в одной
файловой области. Файл-эха может вообще не иметь хост-области, в этом
случае она считается "проходящей" (passthrough). Пришедшие по ней файлы
хранятся в специальном (одном для всех passthrough-эх) каталоге, и
автоматически прибиваются после того, как их скачают все подписанные на
данную файл-эху даунлинки.


.topic AreaMgr
 {Менеджер файловых областей:AreaMgr}▄
  ▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀

Перед Вами - список сущестыующих файловых областей и ряд функциональных
кнопок для манипуляций с этим списком (в статусной строке).

Удерживая клавишу Shift, можно перемещать текущую область вверх-вниз по
списку клавишами соответствующих стрелок.

В списке областей клавишей "пробел" можно помечать сразу несколько
областей, в этом случае кнопки [Опции] и [Удалить] будут действовать в
групповом режиме. Все области сразу можно пометить серым плюсом, снять
все пометки, соответственно, серым минусом.


.topic FileEchoManager
 {Менеджер файл-эх:FileEchoManager}▄
  ▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀

Перед Вами - отсортированый в алфавитном порядке список существующих на
вашем узле файл-эх и набор функциональных кнопок в статусной строке.


.topic SetupMultiArea
 {Групповые операции:SetupMultiArea}▄
  ▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀

В этом диалоге можно изменить некоторые параметры сразу для всех
помеченых областей.

Подлежащие изменению параметры нужно включить в списке [Активность], а
требуемые значения параметров указать в списке [Значения].

.topic SelectEcho
Выберите файл-эху из приведеного списка.


.topic SetupEcho
 {Параметры файл-эхи:SetupEcho}▄
  ▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀

 ┌─────────────────────────────────────┐
 │EchoTag                              │
 └─────────────────────────────────────┘

Собственно, тег (имя) данной файл-эхи.

 ┌─────────────────────────────────────┐
 │Host-Area                            │
 └─────────────────────────────────────┘

{Хост-область:AboutHostArea} данной файл-эхи.

 ┌ Параноя ───────────────┐
 │ [ ] Боимся Replaces    │
 │ [ ] Проверяем CRC      │
 │ [ ] Храним дупы        │
 └────────────────────────┘

Перечень параноидальных синдромов .) Для спокойных, уверенных в себе
сисопов нормальное состояние всех флажков - "выключено".

Если включить "Боимся Replaces", то директива Replaces тика будет
игнорироваться. В любом случае игнорируются Replaces, содержащие
wildcards ('*', '?').

При включённом "Проверяем CRC" Hi-Files будет вычислять CRC
сопровождаемого файла и сравнивать его с указаным в тике. При
несовпадении контрольных сумм тик отвергается.

При включённом флажке "Храним дупы" в случае прихода дупа по файл-эхе
(то есть одноимённый файл уже существует в хост-области данной файл-эхи
и его CRC совпадает с CRC вновь полученного файла) тик отвергается по
обычным правилам - сопровождаемый файл остаётся в инбаунде, а тик
перемещается в каталог отстойника с соответствующей записью в
bad_tic.log. Если флажёк "Храним дупы" отключен, то Hi-Files просто
прибьёт и тик и сопровождаемый им дуповый файл.

 ┌ Состояние ──────┐
 │ ( ) Awaiting    │
 │ () Alive       │
 │ ( ) Down        │
 └─────────────────┘

Текущее состояние файл-эхи:

Awaiting - Создана оператором или как результат автоподписки по форвард-
реквесту, но ещё не получено ни одного файла.

Alive - Живая (т.е. по крайней мере один файл уже пролетал).

Down - Файл-эха сносится.

■ Кнопки:

 [ Линки ]
Редактирование подписки.

 [ Ловушки ]
Редактирование списка {файловых ловушек:SetupHooks}.

 [ Сменить хост... ]
Изменить {хост-область:AboutHostArea}.

.topic Hatch
 {Хатчинг:Hatch}▄
  ▀▀▀▀▀▀▀

Отсылка файла в файл-эху. Мне кажется, что в этом диалоге всё настолько
очевидно, что я не знаю, какая тут может понадобиться помощь .)

.topic ImportAreas
 {Импорт описаний файловых областей:ImportAreas}▄
  ▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀

Hi-Files умеет импортировать необходимые для построения описания файловой
области данные из следующих источников:

 ■ Дерево каталогов

Вы указываете путь к некоторому "корневому" каталогу, и Hi-Files
рекурсивно спускается по всем каталогам исходящего из данного корня
поддерева, при этом для каждого найденого каталога создаётся отдельная
файловая область.

.topic ImportEchoes
 {Импорт описаний файл-эх:ImportEchoes}▄
  ▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀

 ■ ВАЖНО!

При импорте описаний файл-эх список Ваших линков не пополняется. То есть,
если в импортируемом описании файл-эхи в списке, например, даунлинков
присутствует узел, который не значится в списке Ваших линков, то он будет
автоматически удалён и из списка даунлинков. Для импорта описаний линков
по файл-эхам воспользуйтесь соответствующим средством в диалоге
{редактора линков:SetupLink}.

Hi-Files умеет импортировать описания файл-эх из следующих источников:

 ■ Hi-Files v1.7

Импортируется файл FileEcho.Ctl в формате Hi-Files версии 1.7. Формат
этого файла довольно близок к формату файлэхопроцессора Filin, так что
пока не реализован "родной" фильтр импорта для филина, можно попытаться
что-то втащить через этот .)

 ■ AllFix

Импортируется двоичный формат AREAS.FIX, в котором хранит свои описания
AllFix пятой версии.

 ■ TMTic

Текстовый формат DMTic - DMTAREAS.INI

.topic ImportLinks
 {Импорт описаний линков:ImportLinks}▄
  ▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀

Hi-Files умеет импортировать список Ваших линков по файл-эхам из
следующих источников:

 ■ AllFix

Импортируется база данных NodeManager-а (файлы NodeFile.Fix и
NodeFile.Idx). Добавляются только сведения о новых линках, для уже
существующих изменения отвергаются.

Флаворы отправки файлов перекодируются следующим образом:

 None -> Hold
 Hold -> Hold
 Crash -> Crash
 Direct -> Direct
 Hold/Direct -> Hold
 Crash/Direct -> Direct

.topic SetupFTN
 {FTN-конфигурация:SetupFTN}▄
  ▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀

В этом диалоге устанавливается ряд общих параметров, специфичных для FTN-
станции и используемых следующими модулями Hi-Files:

  {Постер отчётов:AboutPoster}
  {Финдер:AboutFinder}
  {Файлэхопроцессор:AboutFEchoProc}

Если Вы не используете ни один из этих модулей, то данный диалог Вам не
нужен и дальше можно не читать :)

 ┌─────────────────────────────────────┐
 │Основной адрес                       │
 └─────────────────────────────────────┘

3-d или 4-d FTN-адрес Вашей системы. Hi-Files не поддерживает различные
AKA, поскольку я не вижу, где их можно было бы использовать .)

 ┌─────────────────────────────────────┐
 │Адрес робота                         │
 └─────────────────────────────────────┘

Если Вы хотите использовать средства рассылки отчётов или финдер, которые
формируют свои исходящие сообщения в виде готовых к тоссингу PKT-файлов,
то Вам необходимо в настройках тоссера завести некоего fake-поинта, адрес
которого указывается в данной строке ввода. Не забудьте подписать этого
поинта на те эхоконференции, в которые должен будет помещать свои
сообщения постер отчётов или финдер, и перевести его в Passive, чтобы на
него не паковалась эхопочта.

 ┌─────────────────────────────────────┐
 │Смещение UTC                         │
 └─────────────────────────────────────┘

Тут вроде всё понятно, ввести нужно целое число со знаком '+' или '-'.

 ┌─────────────────────────────────────┐
 │Inbound                              │
 └─────────────────────────────────────┘

Путь к каталогу инбаунда (protected, если у Вас они разнесены), куда
мейлер складывает полученные файлы, и откуда их выгребает тоссер.

 ┌─────────────────────────────────────┐
 │Outbound                             │
 └─────────────────────────────────────┘

Путь к корневому каталогу Binkley-Style Outbound (BSO). Hi-Files работает
только в этом режиме, AMA или FileBoxes не поддерживаются.

 ┌─────────────────────────────────────┐
 │Netmail                              │
 └─────────────────────────────────────┘

Путь к первичному каталогу нетмейла (формат MSG). Здесь менеджер подписки
файлэхопроцессора ищет обращения к Аллфиксу от Ваших линков, сюда же
помещает ответы и (кажется) письма-уведомления.

 ┌─────────────────────────────────────┐
 │PKT-пароль                           │
 └─────────────────────────────────────┘

Этот пароль Hi-Files будет ставить в порождаемые от имени робота (fake-
поинта) PKT-шники, так что его должен знать Ваш тоссер.

.topic SetupFilesBbs
 {Настройка files.bbs:SetupFilesBbs}▄
  ▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀

Это диалог настройки параметров форматирования files.bbs.

■ Комментарии (CheckBoxes)

 [ ] Разрешить свободные

Разрешает использование {свободных комментариев:AboutAloneCmt}.

 [ ] Упорядочить по имени

Если включено, files.bbs будет отсортирован по именам файлов. Если
выключено, будет сохранён исходный порядок следования дескрипторов.

 [ ] Убивать отсутствующие

Когда включено, Hi-Files удалит из files.bbs дескрипторы файлов, которые
при сканировании файловой области не будут обнаружены в каталогах
даунлоада.

 [ ] Режим "Только чтение"

Когда включено, files.bbs не записывается на диск. Обратите внимание, что
запрещается именно ЗАПИСЬ изменённого files.bbs, а не его ИЗМЕНЕНИЕ (в
памяти) в процессе работы.

■ Формат (RadioButton)

Данный переключатель управляет режимом размещения комментариев в
files.bbs.

 ( ) Стандартный

В позициях 1..12 записывается имя файла, 13-я позиция - пробел,
комментарий начинается с 14-й. Если длина имени файла превышает 12
символов, оно будет выведено целиком, а комментарий начнётся через пробел
после имени файла. Если имя файла содержит пробелы, оно будет заключено в
двойные кавычки.

 ( ) AllFix-подобный

Первая строка записывается точно также, как в предыдущей схеме,
последующие строки многострочных комментариев начинаются с символа '>',
непосредственно за которым следует текст комментария.

 ( ) С поддержкой LFN

В первой строке записывается имя файла (какой бы длины оно не было),
после которого следует один пробел, за ним - текст комментария. Строки
продолжения записываются аналогично режиму AllFix. Если имя файла
содержит пробелы, оно заключается в двойные кавычки.

 ┌─────────────────────────────────────┐
 │Глубина BAK-копий                    │
 └─────────────────────────────────────┘

Требуется число от 0 до 9. Это значение управляет количеством сохраняемых
предыдущих версий files.bbs. При записи нового files.bbs предыдущая его
копия сохряняется под именем files.ba1, позапрошлая - files.ba2 и так
далее до указаного в данной строке ввода значения глубины. Если задана
нулевая глубина, сохранение предыдущих копий files.bbs не производится.

 ┌─────────────────────────────────────┐
 │Число цифр в DLC                     │
 └─────────────────────────────────────┘

Число цифр (0..5) в счётчике скачиваний (DLC). Нулевое значение отключает
сохранение DLC в files.bbs.

.topic SetupGenFiles
 {Файлы генератора:SetupGenFiles}▄
  ▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀

В этом диалоге Вы указываете генератору имена файлов, куда он должен
поместить построенные файл-листы и имена файлов управляющих их
построением скриптов.

Кроме того:

 ┌─────────────────────────────────────┐
 │Список FREQ-каталогов                │
 └─────────────────────────────────────┘

Имя файла, в который Hi-Files может поместить перечень всех DL-path
файловой базы, а мейлер будет искать в этом перечне файлы для
удовлетворения файловых запросов (фреков). Если поле оставить пустым,
список freq-каталогов строиться не будет.

 ┌─────────────────────────────────────┐
 │Список MAGIC-алиасов                 │
 └─────────────────────────────────────┘

А это файл списка алиасов для файловых запросов. Инофрмация из этого
файла доступна интерпретатору скриптов (переменная Magic), кроме того,
файлэхопроцессор Hi-Files вносит в этот файл изменения при обработке
тиков с директивой MAGIC. Если поле оставить пустым, Magic-list
подключаться не будет.

.topic SetupDiz
 {Настройка дизов:SetupDiz}▄
  ▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀

Правильнее было бы, конечно, написать "внутриархивных описателей", но я
их все называю "дизами" по-привычке ;-)

Когда Hi-Files делает попытку построить описание архива (для
зарегистрированных, как архивы типов файлов), он читает оглавление архива
и ищет первый файл, подходящий под одну из масок данного списка. Если
такой файл найден, делается попытка его извлечения из архива. Список
масок просматривается последовательно сверху вниз, так что порядок имеет
значение.

.topic SetupArc
 {Настройка архиваторов:SetupArc}▄
  ▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀

В этом списке Вы регистрируете установленные в Вашей системе архиваторы.
Каждая строка списка должна содержать маску файла архива (например,
'*.arj') и, через один или несколько пробелов, команду вызова архиватора
со всеми параметрами, необходимыми для извлечения файла из архива безо
всяких вопросов, подтверждений, etc. Если расширение архиватора не
указано, Hi-Files добавит '.exe'. Архиватор будет искаться сначала в
домашнем каталоге Hi-Files, затем в %PATH%.

К указанной Вами командной строке вызова архиватора Hi-Files добавит 2
параметра:

1. Полное имя архива;
2. Имя извлекаемого файла.

Перед вызовом архиватора текущим будет установлен временный каталог,
заданный переменной окружения TEMP.

■ Важно!

Архиватор, как и любую внешнюю программу, Hi-Files запускает в отдельной
консоли и ждёт её завершения, поэтому проследите, чтобы в pif-файле
каждой вызываемой программы стояла галочка "Закрывать окно после
завершения", иначе окошко будет "залипать".

■ Важно!

Hi-Files умеет пользоваться фриварной библиотекой unrar.dll (c) Eugene
Roshal, которую можно взять на www.rarsoft.com. Если unrar.dll удаётся
найти в домашнем каталоге Hi-Files или в %PATH%, то для всех манипуляций
с файлами '*.RAR' будет использоваться сервис этой библиотеки, вне
зависимости от записи в списке рарегистрированных архиваторов.

Точно также происходит с библиотекой unzip.dll, только саму dll-ку
следует выбирать осторожно ввиду огромного числа их разновидностей.
В составе авторского дистрибутива Hi-Files распространяется
UNZIP.DLL v2.06 (c) Christian Ghisler (based on info-zip unzip
code). А вот, скажем, более известная редакция ChiefZip v2.40 (с)
Prof. Abimbola Olowofoyeku (The African Chief) у меня вызывала и
Access Violation где-то в своих недрах, и реентерабельный вызов
фиксировала там, где его и в помине не было, и т.п.

.topic SetupFetch
 {Настройка генерилок:SetupFetch}▄
  ▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀

Ещё один способ автоматического построения файловых описателей - вызывать
внешнюю программу (генерилку), которая умеет каким-то образом
анализировать специфическую для определённых типов файлов информацию и
строить на её основе текст описания файла.

Такая внешняя программа должна принимать 2 параметра командной строки:
имя файла, подлежащего описанию, и имя файла-описателя, который должна
создать вызываемая генерилка.

А сейчас - перед Вами список этих самых зарегистрированных генерилок.
Каждая строка должна содержать маску файла и, через пробел, команду
вызова генерилки.

В комплект поставки текущей версии Hi-Files входят три генерилки:

 JPGInfo.Exe: Слегка адаптированый под Hi-Files вариант программы Никиты
Попова JPGINFO v1.2; распознаёт форматы JPEG/JFIF.

 XPJ_Info.Exe: Разработаный специально для Hi-Files генератор описаний
для форматов GIF, PCX (c) Alexei Bugai [2:461/110].

 MusicInf.Exe: Генерилка для форматов MP3, XM, MOD.

.topic SetupDefCmt
 {Комментарии по-умолчанию:SetupDefCmt}▄
  ▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀

Если Hi-Files не может построить описатель файла при помощи архиватора
или генерилки, ему присваивается некий стандартный комментарий (типа,
'Не знаю, что это такое'). Чтобы было не совсем скучно, Hi-Files
позволяет делать эти комментарии различными для разных типов файлов.

В данном диалоге Вы можете отредактировать список стандартных
комментариев. Каждая строка списка должна содержать маску файла и, через
пробел, строку его описания.

 ■ Примечание:

Строка описания может содержать макропеременные, которые заменяются своим
значением непосредственно в момент подстановки:

&LFN - Длинное имя файла. Для режимов {файлового API:SetupFileAPI},
отличных от "Первично короткое имя" будет подставлено нативное имя файла
для текущей файловой системы.

&LNAME - То же, что и &LFN, но имя без последнего расширения.

Символ '|' (вертикальная черта, ASCII-124) трактуется как перевод строки,
позволяя тем самым задавать многострочные комментарии.

Пожелания по дополнению данного списка принимаются .)

.topic SetupBadStr
 {Плохие строки:SetupBadStr}▄
  ▀▀▀▀▀▀▀▀▀▀▀▀▀

Если Вы хотите навсегда избавиться от каких-то навязчивых строк в
файловых описателях (вроде 'Description by Kwik-Diz' или 'Файл проскочил
по файл-эхе BOOK'), то перечислите соответствующие сигнальные строки в
списке данного диалога. Если Hi-Files обнаружит вхождение сигнальной
строки в строку комментария к какому-либо файлу, то эта строка будет
целиком удалена из files.bbs

.topic SetupExclude
 {Исключаемые файлы:SetupExclude}▄
  ▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀

Перечислите в предлагаемом списке маски файлов, которые никогда не должны
попадать в files.bbs (и, соответственно, в файл-листы или отчёты).
Например, таким файлом является сам 'files.bbs', который всегда должен
присутствовать на первом месте в списке исключаемых файлов.

.topic SetupScan
 {Режимы сканирования:SetupScan}▄
  ▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀

В этом диалоге Вы настраиваете параметры, управляющие сканированием
файловой базы.

■ Просмотр файловой базы (CheckBoxes)

 [ Искать новые файлы ]

Включает/выключает систему поиска новых файлов и добавление описаний в
files.bbs.

 [ Ставить таймштамп на новые файлы ]

Если включено, то при обнаружении нового файла (то есть, которого нет в
files.bbs) ему устанавливается текущее системное время. Таким образом,
дата файла может трактоваться, как дата его попадания в Вашу файловую
базу.

 [ Обновление: оставить старый описатель ]

Если включено, то Hi-Files не трогает описатель у обновлённого файла.
Этот режим есть смысл использовать, например, в случае применения
внешнего файлэхопроцессора.

При выключенном флажке для обновлённых файлов дескриптор будет построен
заново (этот режим рекомендуется по-умолчанию).

■ Что генерировать (CheckBoxes)

Этот набор выключателей определяет, что именно будет строить Hi-Files при
запуске фазы генератора файл-листов/отчётов.

 ┌─────────────────────────────────────┐
 │Таймаут установки CDROM              │
 └─────────────────────────────────────┘

Время в секундах, которое Hi-Files будет ждать установки нужного тома для
файловой области, расположенной на сменных носителях. В данный момент не
реализовано.

 ┌─────────────────────────────────────┐
 │Возраст новых файлов                 │
 └─────────────────────────────────────┘

Сколько дней после появления в базе файл считается новым.

 ┌─────────────────────────────────────┐
 │Файлов в области лучших              │
 └─────────────────────────────────────┘

Ограничивает число наиболее скачиваемых файлов, которое Hi-Files включает
в виртуальную область лучших файлов.

 ┌─────────────────────────────────────┐
 │Глубина бэкапа FileArea.Ctl          │
 └─────────────────────────────────────┘

Устанавливает число сохраняемых предыдущих копий FileArea.Ctl. Нулевое
значение отключает резервирование.

.topic SetupFinderRobots
 {Роботы финдера:SetupFinderRobots}▄
  ▀▀▀▀▀▀▀▀▀▀▀▀▀▀

Здесь Вы должны определить список имён, на которые должен откликаться
финдер. Обычно пишут на имя 'AllFix' или 'FileFix'. Список роботов един
для всех доступных финдеру эхоконференций.

.topic SetupAfixRobots
 {Роботы менеджера подписки:SetupAfixRobots}▄
  ▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀

Здесь Вы должны определить список имён, на которые должен откликаться
менеджер подписки файлэхопроцессора. Обычно пишут на имя 'AllFix' или
'FileFix'.

.topic SetupForget
 {Забытые файлы:SetupForget}▄
  ▀▀▀▀▀▀▀▀▀▀▀▀▀

В этом диалоге Вы перечисляете список масок (в UNIX-стиле) файлов,
которые никогда не должны попасть в файл-лист/отчёт о новых файлах
(например, сам список новых файлов, или регулярно рассылаемые по
некоторым файл-эхам их правила).

.topic SetupHooks
 {Файловые ловушки:SetupHooks}▄
  ▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀

Hi-Files предоставляет возможность запускать внешние программы в случае
прихода определённых файлов по данной файл-эхе. Эту фичу удобно
использовать, например, для автоматической компиляции нодлистов, проверки
целостности архивов или переархивирование в другой формат.

Каждая строка списка ловушек должна содержать маску отлавливаемых файлов
и, через пробел, команду запуска соответствующей внешней программы. При
запуске Hi-Files передаёт ей 3 параметра командной строки:

%1 - Полное имя поймавшегося файла после его помещения в домашний
каталог файл-эхи;

%2 - Только filename;

%3 - Только ext;

%4 - Только path, включая завершающий слэш, если необходимо.

.topic SetupPoster
 {Рассылка отчётов:SetupPoster}▄
  ▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀

Перед Вами - диалог настройки системы рассылки отчётов о новых файлах
(постер). Рассылка осуществлятся независимо отдельными заданиями, список
которых Вы видите в левой части диалога. Справа от списка расположены
строки ввода атрибутов задания и функциональные кнопки манипуляций со
списком.

■ Атрибуты заданий

Список заданий не индексируется ни одним из перечисленных атрибутов, так
что может существовать сколько угодно записей с повторяющимися значениями
атрибутов.

 ┌─────────────────────────────────────┐
 │EchoTag                              │
 └─────────────────────────────────────┘

Собственно, эхотаг области, в которую направлятся отчёт текущего задания
или зарезервированное слово 'Netmail' для отправки отчёта нетмейлом. Не
забудьте подписать Вашего робота (fake-поинта) на эту эху.

 ┌─────────────────────────────────────┐
 │Скрипт                               │
 └─────────────────────────────────────┘

Имя файла скрипта для данного отчёта.

 ┌─────────────────────────────────────┐
 │From:                                │
 └─────────────────────────────────────┘

Имя отправителя сообщения. 'Hi-Files', наверное .)

 ┌─────────────────────────────────────┐
 │Orig:                                │
 └─────────────────────────────────────┘

Адрес отправителя. Обычно совпадает с основным адресом Вашей системы.

 ┌─────────────────────────────────────┐
 │To:                                  │
 └─────────────────────────────────────┘

Имя получателя. В эху обычно пишут 'All', нетмейлом - персонально :)

 ┌─────────────────────────────────────┐
 │Dest:                                │
 └─────────────────────────────────────┘

Адрес получателя. Заполнятся только для нетмейла.

 ┌─────────────────────────────────────┐
 │Subj:                                │
 └─────────────────────────────────────┘

Тема сообщения. Что-то вроде 'New files report'.

.topic SetupEchoProc
 {Настройки Файлэхопроцессора:SetupEchoProc}▄
  ▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀

 ┌─────────────────────────────────────┐
 │Каталог исходящих тиков              │
 └─────────────────────────────────────┘

Куда должны помещаться порождённые для Ваших даунлинков тики в случае
BSO-режима отгрузки. Можно, конечно, складывать их в аутбаунд, но
отдельный каталог для этого предпочтительнее - с одной стороны,
эстетичнее, с другой - несколько быстрее будет работать чистка
passthrough-свалки .)

 ┌─────────────────────────────────────┐
 │Каталог отвергнутых тиков            │
 └─────────────────────────────────────┘

Отдельный каталог, куда будут складыватсья отвергнутые при тоссинге тик-
файлы. В этом же каталоге автоматически заводится файл 'bad_tic.log', в
который записывается, когда, что и почему было отвергнуто. Сами
сопровождаемые отвергнутыми тиками файлы остаются в инбаунде.

 ┌───────────────────────────────────────────────┐
 │Корневой каталог для автосоздания файл-эх      │
 └───────────────────────────────────────────────┘

Здесь Hi-Files будет создавать каталоги даунлоада для
{хост-областей:AboutHostArea} создаваемых автоматом файл-эх. Имя
создаваемого каталога будет идентично тегу файл-эхи.

 ┌─────────────────────────────────────┐
 │Каталог для passthrough              │
 └─────────────────────────────────────┘

Здесь будут храниться файлы, пришедшие по passthrough-эхам, до тех пор,
пока их не утянут Ваши даунлинки. Passthrough-файл считается свободным,
если в каталоге исходящих тиков нет ни одного ссылающегося на данный файл
тика.

 ┌─────────────────────────────────────┐
 │Корневой каталог файл-боксов         │
 └─────────────────────────────────────┘

Корневой каталог для T-Mail-подобных файл-боксов. Используется для
отгрузки файл-эх тем линкам, для которых разрешено использование файл-
боксов вместо BSO. Hi-Files поддерживает только "длинноимённый" стандарт
файл-боксов.

 ┌─────────────────────────────────────┐
 │Hatch-пароль                         │
 └─────────────────────────────────────┘

Этот пароль идентифицирует тики захатченых с Вашего адреса файлов. Вам
его запоминать не прийдётся, так что введите в это поле какое-нибудь
нечитаемое зломакабучие.

 ┌─────────────────────────────────────┐
 │Файл справки Ареафикса               │
 └─────────────────────────────────────┘

Здесь Вы указываете имя файла, который будет помещён в ответ менеджера
подписки на команду '%HELP'.

 ┌─────────────────────────────────────┐
 │ [ ] Удалять запросы к АреаФиксу     │
 └─────────────────────────────────────┘

Если включено, то обработанные сообщения-запросы будут удаляться. При
выключенном флажке на них проставляется атрибут Received.

 [ Роботы Ареафикса ]

Эта кнопка открывает диалог настройки роботов Ареафикса, то есть тех имён
в поле 'To:', на которые будет откликаться Ваш менеджер подписки.

.topic SetupLink
 {Файлэхолинки:SetupLink}▄
  ▀▀▀▀▀▀▀▀▀▀▀▀

Это диалог настройки Ваших знакомств по файлэхам ;-)

В левой части диалога - список всех систем, с которыми будет работать
файлэхопроцессор Вашей системы. Справа - органы настройки параметров
текущего линка и функциональные кнопки манипуляций со списком.

 ┌─────────────────────────────────────┐
 │Адрес                                │
 └─────────────────────────────────────┘

FTN-адрес данной системы. Список линков индексируется по этому полю.

 ┌─────────────────────────────────────┐
 │Пароль                               │
 └─────────────────────────────────────┘

Пароль для тиков и менеджера подписки.

 ┌─────────────────────────────────────┐
 │Наш AKA                              │
 └─────────────────────────────────────┘

Наш адрес, который будет использован в отношении этого линка. Разумеется,
может не совпадать с нашим основным адресом :)

 ┌ Опции ───────────────┐
 │ [ ] Автозоздание     │
 │ [ ] Авто-аплинк      │
 │ [ ] Уведомления      │
 │ [ ] Пауза            │
 │ [ ] Файл-Бокс        │
 └──────────────────────┘

Автосоздание: разрешает автоматическое создание файл-эхи на Вашем узле по
пришедшему от данного линка тику, если таковой эхи у Вас не существовало.
При выключенном флажке в аналогичной ситуации тик отвергается.

Авто-аплинк: разрешает данному линку автоматически становиться Вашим
аплинком по приходу от него тика в файл-эху, где он числился только
даунлинком. При выключенном флажке в аналогичной ситуации тик
отвергается.

Уведомления: Высылает сисопу данной системы нетмейловые уведомления обо
всяких интересных событиях на Вашей системе (появлении новых файл-эх
или аплинков).

Пауза: На данную систему временно не отгружаются файл-эхи и уведомления.

Файл-Бокс: Отгрузка файл-эх на данную систему будет осуществляться
посредством длинноимённых T-Mail-подобных файл-боксов. Если выключено,
будет использована технология BSO.

 ┌ Флавор ──────────────┐
 │ () Hold             │
 │ ( ) Normal           │
 │ ( ) Direct           │
 │ ( ) Crash            │
 └──────────────────────┘

Переключатель флаворов отправки файлов и нетмейловых сообщений текущему
линку.

 [Запреты...]

Открывает окно редактора запретов на файл-эхи (по маскам) для данного
линка.

 [Подписка...]

Открывает окно {редактора подписки:EditLinkedAreas} для данного линка.

 [Импорт...]

Средства импорта списка узлов из конфигурационных файлов других
процессоров.

.topic EditLinkedAreas
 {Редактор подписки:EditLinkedAreas}▄
  ▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀

В этом диалоге Вы можете быстро отредактировать подписку на файл-эхи для
текущего линка.

Слева - список всех доступных для данного линка файл-эх (без входящих в
список запрещённых) с указанием соответствующих прав доступа, справа -
органы управления правами доступа.

 ┌─ Права доступа ────────┐
 │ [X] Чтение (даунлинк)  │
 │ [ ] Запись (аплинк)    │
 └────────────────────────┘

Установите в этом чек-боксе требуемые права на текущую файл-эху в списке
и нажмите кнопку [Установить].

 [Отписать от всего]

Данный линк будет отписан от всех файл-эх в списке, как по чтению, так и
по записи.

 [Запретить запись]

Данный линк потеряет все права на запись по всем файл-эхам в списке
(перевод в ReadOnly).

.topic EditDenyList
 {Запрещённые файл-эхи:EditDenyList}▄
  ▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀

В этом диалоге Вы редактируете список UNIX-масок файл-эх, доступ к
которым запрещаете некоторому линку. Он не сможет ни
самостоятельно подписаться на такую эху, ни отправить файл в неё, однако,
он будет получать по ней файлы, если Вы подпишете его сами.

.topic SetupForwardReq
 {Форвард-реквесты:SetupForwardReq}▄
  ▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀

В левой части диалога - список Ваших аплинков, на которые возможна
атоматическая отправка форвард-реквестов. Справа - органы настройки
параметров текущего линка и функциональные кнопки манипуляций со списком.
Обратите внимание, что порядок перечисления аплинков в списке важен:
Hi-Files подпишется у первого аплинка, имеющего запрашиваемую фэху.
Переставлять аплинков в списке можно стрелками, удерживая при этом
нажатой клавишу Shift.

 ┌─────────────────────────────────────┐
 │ Адрес                               │
 └─────────────────────────────────────┘

FTN-адрес текущего аплинка.

 ┌────────────────────────────────────┐
 │ Файл списка эх                     │
 └────────────────────────────────────┘

Имя файла, содержащего список фай-эх, на которые можно подписаться у
данного аплинка. Сам список должен быть оформлен в виде текстового файла,
каждая строка которого содержит тег файл-эхи и, возможно, через пробел(ы)
любую допольнительную информацию (игнорируется).

 ┌ Опции ─────────────┐
 │ [ ] Неактивен      │
 └────────────────────┘

Включите этот флажек, если нужно временно приостановить формирование
форвард-реквестов на данного аплинка.

.topic SetupFinder
 {Настройка Финдера:SetupFinder}▄
  ▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀

Перед Вами - диалог настройки системы поиска файлов по запросам
({финдера:AboutFinder}).

В левой части диалога - список эхоконференций, к которым разрешён доступ
финдеру. Справа - строки ввода параметров для каждой из
зарегистрированных в списке эхоконференций, кнопка [Имена_роботов],
вызывающая редактор имён {роботов финдера:SetupFinderRobots} и
функциональные кнопки манипуляций со списком.

 ┌─────────────────────────────────────┐
 │EchoTag                              │
 └─────────────────────────────────────┘

Собственно, тег эхоконференции.

 ┌─────────────────────────────────────┐
 │Скрипт                               │
 └─────────────────────────────────────┘

Имя файла скрипта, управляющего ответами в данную эхоконференцию.

 ┌─────────────────────────────────────┐
 │From:                                │
 └─────────────────────────────────────┘

Имя отправителя, которое Hi-Files проставит в своих ответах финдера.

 ┌─────────────────────────────────────┐
 │Orig:                                │
 └─────────────────────────────────────┘

Исходящий FTN-адрес ответов финдера. Обычно совпадает с основным адресом
Вашей системы.

.topic SetupFinderOpt
 {Общие параметры финдера:SetupFinderOpt}▄
  ▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀

В этом диалоге Вы определяете некоторые параметры, управляющие работой
подсистемы финдера вцелом.

 ┌──────────────────────┐
 │ [ ] Отвечать всегда  │
 └──────────────────────┘

Если включено, финдер порождает ответ даже в том случае, если не было
найдено ни одного подходящего файла. Если Вы намерены использовать этот
режим, необходимо позаботиться о том, чтобы в {скрипте:AboutScript}
финдера была соответствующая обвязка, например:

 // if TotalFiles = 0
 "На Ваш запрос нам, к сожалению, совершенно нечего ответить :("
 // else
 ... собственно, вывод отчёта ...
 // endif

Примечание: Оператор скрипта {Cancel:LR_Op_Cancel} всё равно остаётся в
вашем распоряжении .)

.topic SetupFileApi
 {API имён файлов:SetupFileApi}▄
  ▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀

В этом диалоге Вы определяете приоритеты использования альтернативных
имён файлов, предоставляемых файловым API операционной системы.

  0 - Первично короткое имя.
В этом режиме файловая база индексируется короткими именами файлов, а
переменная LongName принимает значение длинного имени, если оно есть.

  1 - Первично длинное имя.
Файловая база индексируется по LFN, а переменная LongName принимает
значение короткого имени, если оно есть.

  2 - Только нативное имя ОС.
Существуют только нативный имена файлов, каким их возвращает
операционная система. Переменная LongName всегда равна пустой строке.

ВАЖНО! При переключении режимов изменяется формат хранения files.bbs.

.topic AboutFEchoProc
 {Файлэхопроцессор:AboutFEchoProc}▄
  ▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀

Встроенный файлэхопроцессор Hi-Files предоставляет следующие возможности:

■ Тоссинг входящих тиков согласно FSC-0087, за исключением следующих
ограничений:

 Не поддерживается 5d-адресация;

 Вероятно, не поддерживается FQFA-адресация, поскольку я ваще не знаю,
что это такое .)

 Игнорируются строки VIA.

■ Рассылка файл-эх даунлинкам, используя технологию BSO (Binkley-
Style Outbound) или T-Mail FileBoxes (long-name only).

■ Поддержка проходящих (passthrough) файл-эх, т.е. автоматически
уничтожаются пришедшие по ним файлы после того, как их скачают все
подписанные даунлинки.

■ Встроенный менеджер подписки с поддержкой форвард-реквестов.

■ Запуск внешних программ по приходу определённых файлов в заданных
файл-эхах.

■ Интерактивный хатчер.

■ {Пакетный хатчер:BatchHatch}.

■ Служба рассылки нетмейловых уведомлений Вашим линкам о создании новых
файлэх и/или появлении новых аплинков.

■ Интерактивная настройка параметров и полная интеграция с другими
модулями Hi-Files.

См. также {Управление менеджером подписки:AfixCmd}.

.topic BatchHatch
 {Пакетный хатчер:BatchHatch}▄
  ▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
Для регулярной автоматической рассылки файлов по некоторым файл-эхам
можно запускать Hi-Files с параметром командной строки

 HATCH[=имя_управляющего_файла]

где необязательный параметр указывает на файл сценаря рассылки. Если имя
не указано, подразумевается HATCH.CTL в домашнем каталоге Hi-Files.

Управляющий файл имеет простой текстовый формат и состоит из одной или
более секций (заданий), каждая из которых определяет параметры хатчинга
одного файла.

Формат задания:

 job имя_задания
 File имя_отправляемого_файла
 Area тэг_файлэхи
 [Magic magic-алиас]
 [Replaces маска_замены]
 // первая строка комментария (Desc)
 [// следующая строка комментария (LDesc)]
 ...
 end

Обратите внимание, что текст комментария переносится в tic-файл начиная с
4-й позиции (строка должна начинаться с двух слэшей и пробела).

Пример задания:

 job Hi-Files
 File c:\projects\hi-files\out\hifiles.zip
 Area AFTNMISC
 Magic HIFILES
 // Hi-Files 2.20.14 [Win32] Executable.
 end

.topic AfixCmd
 {Менеджер подписки:AfixCmd}▄
  ▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀

Для управления своей подпиской на файл-эхи Ваши линки должны прислать
нетмейлом запрос на имя робота - менеждера подписки (см.
{Роботы ареафикса:SetupAfixRobots}). В поле 'Subj' письма должен быть
указан пароль данного линка к менеджеру подписки. Тело письма разбирается
построчно с одновременным формированием ответа подписчику. Если строка
начинается НЕ с одного из символов '%', '+', '-', то она игнорируется.
Символом '%' начинаются команды, приведеные ниже:

 %HELP

Выслать подсказку по пользованию менеджером подписки. Текст данной
подсказки хранится в файле 'AreaMgr.Hlp'.

 %LIST

Высылает перечень существующих на Вашем узле файл-эх.

 %QUERY

Высылает перечень областей, на которые подписана запрашивающая система.

 %AVAIL

Высылает перечень областей, на которые возможна подписка у наших аплинков
по форвард-реквестам.

 %NOTIFY [ON | OFF]

Включает/выключает режим уведомлений.

 %PAUSE

Временно прекращает отгрузку файл-эх и уведомлений, структура подписки
сохраняется.

 %RESUME

Возобновляет отгрузку файл-эх и уведомлений после %PAUSE.

Для того, чтобы подписаться на некоторую область (группу областей), нужно
указать следующую команду:

 +<echotag>

Где <echotag> - имя требуемой области или UNIX-маска.

Отписка производится аналогично командой:

 -<echotag>

■ NB! Нельзя подписываться путём указания только имени области, без знака
'+', как это разрешено в других файлэхопроцессорах. Сделано это для
защиты от всяких осколков темплетов вроде "Привет, AllFix" или
кладжеобразий типа "Received by:".

.topic AboutFileBaseManager
 {Администратор файловой базы:AboutFileBaseManager}▄
  ▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀

Hi-Files содержит диалоговые средства администрирования файловой базы -
специально для тех, кто не любит ковыряться в текстовых конфигах.
Собственно, конфигурационные данные всё равно хранятся в текстовом файле
FileArea.Ctl, и для выполнения каких-то нетривиальных манипуляций с
настройками всегда остаётся возможность написать grep на 3 строки .)

.topic AboutFilGen
 {Генератор файл-листов:AboutFilGen}▄
  ▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀

Генератор файл-листов Hi-Files работает по следующей схеме.

1. Читаем описание файловых областей FileArea.Ctl, затем files.bbs для
всех перечисленых там областей. В процессе чтения files.bbs производится
причёсывание файловых описателей и удаление из них {плохих:SetupBadStr}
строк.

2. Сканируем DL-path всех файловых областей, таймштамп последнего
сканирования сохряняется в FileArea.Ctl для каждой области. Формируем
таблицу соответствия основных и альтернативных имён файлов (8.3 и LFN),
если это позволяет файловое API операционной системы и разрешено
настройками {режимов FAPI:SetupFileApi} Hi-Files.

2.1. Если обнаружен файл, которого нет в files.bbs, и разрешён поиск
новых файлов, заносим его туда, и, если разрешено, присваиваем найденому
файлу текущую системную дату/время, затем пытаемся построить ему
описание по следующему алгоритму:

2.1.1. Если файл имеет расширение '.RAR' и в домашнем каталоге Hi-Files
или %PATH% удаётся найти 'UNRAR.DLL', читаем с её помошью оглавление
архива. Если там имеется файл, попадающий под маску
{внутриархивных описателей:SetupDiz}, пытаемся извлечь его их архива и
считать содержащийся в нём текст опианием файла архива. То же самое
происходит для файлов с расширением '.ZIP', если удаётся прилинковаться к
библиотеке 'UNZIP.DLL'.

2.1.2. Если после предыдущего шага файл всё ещё не имеет описания,
сравниваем его имя с масками зарегистрированных {архиваторов:SetupArc}.
Если подходит, пытаемся прочитать внутренними средствами Hi-Files
оглавление архива и извлечь файл-описатель вызовом внешнего архиватора.

2.1.3. Если и сейчас файл не имеет описания, пытаемся вызвать подходящую
для него {генерилку:SetupFetch}.

2.1.4. Если файл упорно продолжает быть неописаным, присваиваем ему
{стандартный описатель:SetupDefCmt}.

2.1.5. Если всё настолько запущено, что для данного типа файлов нет
зарегистрированного стандартного описателя (или он входит в список
плохих строк), файлу присваивается hard-coded описатель, зашитый в
hifiles.res.

2.2. Если Hi-Files запущен с параметром '-UPDATE', а текущий файл не
является новым и содержит стандартный или hard-coded описатель, то
пытаемся проделать всю процедуру 2.1.*. То же самое выполняем, если
Hi-Files запущен с '-FORCE', но уже безотносительно текущего содержимого
файлового описателя.

2.3. Если файл уже существовал в files.bbs, а его дата/время больше (то
есть, файл моложе) даты последнего сканирования файловой области, то
данный файл считается обновлённым с момента формирования последнего
отчёта о новых файлах, и запись о нём удаляется из базы данных
проанонсированных файлов.

2.4. После сканирования описаным выше образом всех файловых областей
удаляем из files.bbs описания физически отсутствующих файлов (если
разрешено в конфиге).

2.5. Сохраняем описание файловых областей (если изменено) и все
files.bbs, естественно, с оговоркой насчёт Read-Only и созданием BAK-
копий. Из памяти сохранённая файловая база не удаляется, в последующих
шагах она будет использоваться и модифицироваться, но уже без
соответствующих изменений в базе на диске. Эту "виртуальную" базу в
памяти мы будем называть "образом" файловой базы, чтобы не путать с
физической базой на диске.

2.6. Если задано, формируем файл, содержащий список DL-path всех
имеющихся файловых областей (список каталогов для файловых запросов).

2.7. Если задано, строим виртуальную файловую область, содержащую
перечень наиболее часто скачиваемых файлов.

2.8. Собственно, построение файл-листа осуществляет интерпретатор
скриптов, получая на вход соответствующий файл скрипта и образ файловой
базы. В данный момент интерпретатор запускается для построения списка
всех файлов.

2.9. Если задано построение списка новых файлов (в виде файл-листа или
отчёта), анализируем образ файловой базы и удаляем из неё записи о
файлах, имеющих возраст более заданого. Файловые области, из которых
таким образом были удалены все файлы, также удаляются.

2.10. Запускаем интерпретатор для построения файл-листа новых файлов.

2.11. Если задано построение отчёта о новых файлах, открываем базу
анонсов, содержащую ссылки на файлы, которые уже попадали в отчёт ранее,
и удаляем записи с этими файлами из образа файловой базы. После этого
запускаем интепретатор скриптов для построения PKT-шника с отчётом о
новых файлах. Далее заносим в базу анонсов информацию о попавших в
текущий отчёт файлах и удаляем из неё ссылки на устаревшие файлы
(которые уже не считаются новыми по дате).

2.12. На этом работа фазы генератора закончена, из памяти удаляются все
созданые структуры данных.

.topic AboutFinder
 {Финдер:AboutFinder}▄
  ▀▀▀▀▀▀

Ещё одна полезная технология, которую поддерживает Hi-Files, это система
поиска файлов по запросам в специальной эхоконференции. Идея заключается
в том, что любой подписчик этой эхи может написать в неё письмо на имя
робота-поисковика (обычно 'AllFix' или 'FileFix'), с указанием в поле
'Subj' критериев поиска некоего файла (файлов). Роботы "читают" эти
письма и пытаются найти в своих файловых базах удовлетворяющие указанным
критериям файлы. Если что-либо удаётся найти, робот формирует ответ в
исходную эхоконференцию, где перечисляются подходящие файлы.

Критерии поиска в поле 'Subj' разделяются пробелами и представляют собой
либо UNIX-маску файла, либо сигнальный текст в кавычках. Соответственно,
в базе ищутся файлы, имена которых подходят хотя бы под одну из масок,
либо в тексте их комментария встречается по крайней мере одна из
сигнальных строк.

Для использования данного сервиса Вам необходимо прописать в Вашем
тоссере fake-поинта, с адреса которого Hi-Files будет формировать
PKTшники ответов на запросы, и обеспечить запуск Hi-Files с параметром
'-FIND' в промежутке между распаковкой пришедших бандлов и тоссингом
извлечённых из них пакетов.

.topic AboutPoster
 {Постер отчётов:AboutPoster}▄
  ▀▀▀▀▀▀▀▀▀▀▀▀▀▀

Hi-Files умеет рассылать отчёты о новых файлах в эху или нетмейлом. В
отличие от списка новых файлов, содержащего перечень пополнений Вашей
файловой базы за последние сколько-то там дней, отчёт содержит сведения о
ПОЯВЛЕНИИ новых файлов, то есть новые файлы попадают в отчёт только один
раз.

Собственно, отправка сообщений происходит с использованием технологии
"DirectPKT" :) - то есть, Hi-Files формирует в каталоге инбаунда
готовый к тоссингу PKTшник от некоего (известного Вашему тоссеру) fake-
поинта, так что все проблемы различных почтовых баз нас не беспокоят.

; ###################################################################
;
; Интерпретатор скриптов
;
; ###################################################################

.topic AboutScript
 {Интерпретатор скриптов:AboutScript}▄
  ▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀

Hi-Files не навязывает Вам какого-то предопределённого внешнего вида
файл-листов или отчётов, вместо этого предоставляется возможность самому
написать программу-сценарий формирования текста на некоем встроенном
языке.

Конечно, такая технология ощутимо увеличивает время построения отчёта по
сравнению с hard-coded генератором, однако, IMHO, это вполне приемлемая
плата за полный контроль над внешним видом получаемых документов :_)

■ Общие правила

Программа на языке Hi-Files записывается по одной инструкции в строке.
Если строка начинается с последовательности

//

то это - оператор (ностальгия о ДОС-ЕС и в пику C++), иначе строка будет
интерпретирована, как выражение, приведённое к типу String, результат
которого выводится в выходной поток (файл-лист, отчёт).

■ Дальнейшие темы:

 {Типы данных:LR_DataType}
 {Константы:LR_Const}
 {Операции:LR_Op}
 {Переменные:LR_Var}
 {Функции:LR_Fun}
 {Операторы:LR_Operator}

.topic LR_DataType
 {Типы данных:LR_DataType}▄
  ▀▀▀▀▀▀▀▀▀▀▀

  Integer [N] (целый, размер 32-bit)
  Float   [F] (вещественный, размер Double)
  Bool    [B] (да/нет)
  String  [S] (строковый, max 255 символов)

.topic LR_Const
 {Константы:LR_Const}▄
  ▀▀▀▀▀▀▀▀▀

  Integer: 123900
  Float  : 17.354
  Bool   : True, False
  String : "Маша мыла маму"

.topic LR_Op
 {Операции:LR_Op}▄
  ▀▀▀▀▀▀▀▀

■ Унарные:

 +   : Игнорируется [N, F]
 -   : Инверсия знака [N, F]
 not : Логическое отрицание [B]

■ Бинарные

 +   : Сложение [N, F], конкатенация [S].
 -   : Вычитание [N, F]
 *   : Умножение [N, F]
 /   : Деление [N, F]
 and : Логическое "и" [B]
 or  : Логическое "или" [B]
 xor : Логическое "исключающее или" [B]
 =   : Сравнительное "равно?"
 <>  : Сравнительное "не равно?"
 >   : Сравнительное "больше?"
 <   : Сравнительное "меньше?"
 >=  : Сравнительное "больше или равно?"
 <=  : Сравнительное "меньше или равно?"

■ Присваивание

 :=  : Простое присваивание

Во-первых, все формы оператора присваивания рассматриваются, как
возвращающие значение, что позволяет строить каскадные конструкции вида:

 a := b := c

Во-вторых, допускается "инкрементирующие" формы операторов присваивания:

 'a += b' обозначает 'a := a + b'

Аналогично трактуются операторы '-=', '*=', '/='.

Кроме того, допускаются операторы автоинкремента (автодекремента) '++' и
'--', которые, в свою очередь, могут быть префиксными (перед операндом) и
постфиксными (после операнда). Префиксный оператор модифицирует значение
перед его использованием в выражении, постфиксный, соответственно, после.
Естественно, операнды этих операторов должны быть lvalue (допускать
операцию присваивания).

.topic LR_Var
 {Переменные:LR_Var}▄
  ▀▀▀▀▀▀▀▀▀▀

Имена переменных задаются обычным идентификатором по правилам Паскаля.
Каждая переменная перед своим использованием должна быть
{описана:LR_Op_Declare}.

Имеется ряд предопределённых переменных:

 {Глобальные:LR_Var_Global}
 {Локальные в блоке AreaLoop:LR_Var_AreaLoop}
 {Локальные в блоке FileLoop:LR_Var_FileLoop}

.topic LR_Var_Global
 {Глобальные переменные:LR_Var_Global}▄
  ▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀

  SoftName (String)
Имя программы (Hi-Files).

  SoftVer (String)
Версия программы.

  Platform (String)
Идентификатор платформы (Win32, Dos32, OS2, Linux).

  PrimaryAddr (String)
Основной FTN-адрес Вашей системы.

  Today (String)
Текущая системная дата.

  Age (Integer)
Возраст новых файлов (дней).

  TotalFiles (Integer)
Общее число файлов в текущем образе файловой базы.

  TotalBytes (Float)
Суммарный размер всех файлов в текущем образе файловой базы.

■ В скриптах постера отчётов и финдера дополнительно опредлены следующие
переменные:

  OrigAddr (String)
Строковое представление исходящего FTN-адреса в порождаемом сообщении.

  Subj (String)
Содержимое поля 'Subj' порождаемого сообщения.

■ В скриптах финдера дополнительно определены ещё несколько переменных,
принимающие значения полей сообщения, на которое отвечает финдер:

  FirstName (String)
Первое слово из поля 'From'.

  LastName (String)
Последнее слово из поля 'From'.

.topic LR_Var_AreaLoop
 {Переменные блока AreaLoop:LR_Var_AreaLoop}▄
  ▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀

  AreaNo (Integer)
Порядковый номер текущей файловой области в образе файловой базы.

  AreaName (String)
Имя текущей файловой области.

  Removable (Bool)
True, если по-крайней мере один DL-Path данной области размещается на
сменном носителе.

  AreaFiles (Integer)
Число файлов в данной области.

  AreaBytes (Float)
Суммарный размер файлов в данной области.

  AreaCount (Integer)
Общее число дескрипторов в данной области (файлы + свободные
комментарии).

  GroupTag (String)
Тег файловой группы, к которой принадлежит текущая область.

  Virtual (Bool)
True, если текущая файловая область является
{виртуальной:LR_Op_NewArea}.

  GroupFiles (Integer)
Суммарное число файлов во всех областях, принадлежащих той же группе, что
и текущая файловая область.

  GroupBytes (Float)
Суммарный размер файлов во всех областях, принадлежащих той же группе,
что и текущая файловая область.

  HomeDir (String)
Primary Download Path текущей области.

.topic LR_Var_FileLoop
 {Переменные блока FileLoop:LR_Var_FileLoop}▄
  ▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀

  FileName (String)
Имя текущего файла в формате 8.3.

  LongName (String)
Длинное имя текущего файла, каким его возвращает LFN API.

  HasLongName (Bool)
True, если текущий файл имеет длинное имя и оно отличается от короткого
не только регистром.

  FileSize (Integer)
Размер текущего файла или ноль для отсутствующего.

  FileDLC (Integer)
Значение счётчика скачиваний (DLC).

  EntryNo (Integer)
Порядковый номер текущего дескриптора в файловой области.

  FileDate (String)
Дата текущего файла в формате dd-Mmm-yy.

  AloneCmt (Bool)
True, если текущий дескриптор является свободным комментарием.

  Missing (Bool)
True, если текущий дескриптор принадлежит отсутствующему файлу.

  FD_Lines (Integer)
Число строк комментария в текущем дескрипторе.

  Magic (String)
Имя алиаса файлового запроса для текущего файла, или пусто.

  TextWidth (Integer)
Максимальная длина строки файлового комментария.

.topic LR_Fun
 {Функции:LR_Fun}▄
  ▀▀▀▀▀▀▀

Вы можете использовать следующие предопределённые функции:

  String Pad(S: String; N: Integer);
Дополняет строку S пробелами справа до длины N.

  String PadCh(S: String; N: Integer; Ch: String);
Дополняет строку S справа значением первого символа строки Ch до длины N.

  String LeftPad(S: String; N: Integer);
Дополняет строку S пробелами слева до длины N.

  String LeftPadCh(S: String; N: Integer; Ch: String);
Дополняет строку S слева значением первого символа строки Ch до длины N.

  String ASRF(N: Float);
Преобразует число N (размер файла) в строку вроде '17.5K'.

  String IntToStr(N: Integer);
Преобразует целое число N в его строковое представление.

  String IntToStrZ(N, Z: Integer);
Преобразует целое число N в его строковое представление, дополняя нулями
слева до длины Z. Если Z=0, дополнение не прооизводится.

  String Center(S: String; N: Integer);
Центрирует строку S в строке из пробелов длиной N.

  String CenterCh(S: String; N: Integer; Ch: String);
Центрирует строку S в строке длиной N, первоначально состоящую из
символов Ch[1].

  Integer Random(N: Integer);
Возвращает значение случайной величины, равномерно распределённой на
отрезке от 0 до N.

  String Substr(S: String; From, Len: Integer);
Возвращает подстроку длиной Len из строки S, начиная с символа номер
From.

  String Trim(S: String) : String;
Обрезает лидирующие и завершающие пробелы у строки S.

  String TrimL(S: String) : String;
Обрезает лидирующие пробелы у строки S.

  String TrimR(S: String) : String;
Обрезает завершающие пробелы у строки S.

  String CharStr(Ch: String; Len: Integer);
Возвращает строку, состоящую из Len символов Ch[1].

  Integer Length(S: String);
Возвращает длину строки S.

  Bool Match(Source, Pattern: String);
Возвращает True, если строка Source (обычно имя файла) подходит под
UNIX-маску Pattern.

  String JustFileName(S: String);
Возвращает только имя файла (без расширения).

  String FileComment();
Функция может вызыватсья только из блока FileLoop и возвращает содержимое
текущей строки файлового комментария, после чего внутренний указатель
позиционируется на начало следующей строки. При каждом проходе "сквозь"
оператор FileLoop указатель сбрасывается в начало первой строки
комментария.

  Bool DescMissing();
Функция может вызываться только из блока FileLoop и возвращает True,
если у текущего файла нет описателя, либо он является дефолтным.

 ∙ String FormatDT( Format: String; DateTime: Float );
Форматирует значение даты/времени, переданного в аргументе DateTime
согласно значению {форматной строки:LR_FmtSpec} Format. Значение
даты/времени для передачи в данную функцию может быть получено обращением
к функциям Now() или FileTime().

 ∙ Float Now();
Возвращает текущую системную дату и время на момент её вызова в виде,
пригодном для передачи в функцию FormatDT.

  Float FileTime();
Функция может вызываться только из блока FileLoop и возвращает таймштамп
текущего файла в виде, пригодном для передачи в функцию FormatDT.

.topic LR_FmtSpec
 {Форматная строка:LR_FmtSpec}▄
  ▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀

Форматная строка для функции FormatDT может содержать следующие
спецификаторы:

  c
Отображает дату, используя форматную строку для короткой даты, полученную
из настроек системной локали, после которой следует время, формат
которого задан форматной строкой для длинного времени.

  d
Отображает день как число без лидирующего нуля (1-31).

  dd
Отображает день как число с лидирующим нулём (01-31).

  ddd
Отображает день недели как трёхбуквенное сокращеие, заданное в настройках
системной локали.

  dddd
Отображает полное наименование дня недели, заданное в настройках
системной локали.

  ddddd
Отображает дату, используя форматную строку короткой даты, заданную в
настройках системной локали.

  dddddd
Отображает дату, используя форматную строку длинной даты, заданную в
настройках системной локали.

  m
Отображает месяц как число без лидирующего нуля (1-12). Если спецификатор
'm' следует непосредственно после спецификаторов 'h' или 'hh', вместо
месяца будут отображены минуты.

  mm
Отображает месяц как число с лидирующим нулём (01-12). Если спецификатор
'm' следует непосредственно после спецификаторов 'h' или 'hh', вместо
месяца будут отображены минуты.

  mmm
Отображает месяц, как трёхбуквенное сокращение, заданное в настройках
системной локали.

  mmmm
Отображает полное наименование месяца, заданное в настройках системной
локали.

  yy
Отображает год как двузначное число (00-99).

  yyyy
Отображает год как четырёхзначное число (0000-1999).

  h
Отображает часы без лидирующего нуля (0-23).

  hh
Отображает часы с лидирующим нулём (00-23).

  n
Отображает минуты без лидирующего нуля (0-59).

  nn
Отображает минуты с лидирующим нулём (00-59).

  s
Отображает секунды без лидирующего нуля (0-59).

  ss
Отображает секунды с лидирующим нулём (00-59).

  t
Отображает время, используя форматную строку для короткого времени,
заданную в настройках системной локали.

  tt
Отображает время, используя форматную строку для длинного времени,
заданную в настройках системной локали.

  am/pm
Использует 12-часовое представление часов для предшествующих
спецификаторов 'h' или 'hh' и daylight-спецификатор 'am' или 'pm'.
Результат вывода будет в том же регистре, что и сам спецификатор.

  a/p
Использует 12-часовое представление часов для предшествующих
спецификаторов 'h' или 'hh' и daylight-спецификатор 'a' или 'p'.
Результат вывода будет в том же регистре, что и сам спецификатор.

  ampm
Использует 12-часовое представление часов для предшествующих
спецификаторов 'h' или 'hh' и соответствующий daylight-спецификатор,
который берётся из настроек системной локали.

  /
Отображает символ-разделитель компонентов даты, который указан в
настройках системной локали.

  :
Отображает символ-разделитель компонентов времени, который указан в
настройках системной локали.

  'xx'
  "xx"
Символы, заключённые в одинарные или двойные кавычки, отображаются как
есть и не влияют на процесс форматирования.

 ■ ПРИМЕЧАНИЕ

Взаимодействие с настройками системной локали не гарантируется под ОС,
отличными от платформы Win32.

.topic LR_Operator
 {Операторы:LR_Operator}▄
  ▀▀▀▀▀▀▀▀▀

 {Описания переменных:LR_Op_Declare}
 {Присваивание:LR_Op_Assign}
 {Условный оператор:LR_Op_If}
 {Цикл while:LR_Op_While}
 {Цикл AreaLoop:LR_Op_AreaLoop}
 {Цикл FileLoop:LR_Op_FileLoop}
 {Выход из цикла Break:LR_Op_Break}
 {Включение внешнего файла Include:LR_Op_Include}
 {Печать внешнего файла PrintFile:LR_Op_PrintFile}
 {Перенаправление вывода:LR_Op_Redirect}
 {Создание виртуальной области NewArea:LR_Op_NewArea}
 {Копирование в виртуальную область Copy:LR_Op_Copy}
 {Отмена выполнения скрипта Cancel:LR_Op_Cancel}

.topic LR_Op_Declare
 {Описания переменных:LR_Op_Declare}▄
  ▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀

Оператор описания переменных можно записывать где угодно, но повторное
описание считается ошибкой.

 // Integer <id_list>
 // Float <id_list>
 // String <id_list>
 // Bool <id_list>

.topic LR_Op_Assign
 {Оператор присваивания:LR_Op_Assign}▄
  ▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀

Собственно, отдельного оператора присваивания не существует. Или, если
угодно, таковым является любое выражение, содержащее операцию
присвавивания. Или не содержащее, правда, диагностическое сообщение "Code
has no effect" не выдаётся .)

.topic LR_Op_If
 {Условный оператор:LR_Op_If}▄
  ▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀

 // if <expr>
 ... последовательность операторов ветви "then" ...
 // else
 ... последовательность операторов ветви "else" ...
 // endif

Выражение <expr> должно приводиться к типу 'Bool'. Если ветвь "else" не
нужна, то и сам оператор else не нужен. Допускаются вложенные условные
операторы.

.topic LR_Op_While
 {Цикл While:LR_Op_While}▄
  ▀▀▀▀▀▀▀▀▀▀

 // While <expr>
 ... Последовательность операторов тела цикла ...
 // EndWhile

Тело  цикла  будет выполняться, пока при входе в цикл значениие
<expr> будет True.

Допускаются вложеные операторы цикла.

.topic LR_Op_AreaLoop
 {Цикл AreaLoop:LR_Op_AreaLoop}▄
  ▀▀▀▀▀▀▀▀▀▀▀▀▀

 // AreaLoop
 ... Последовательность операторов тела цикла ...
 // EndAreaLoop

Тело цикла будет выполнено для каждой существующей файловой области. На
каждом проходе ряд предопределенных переменных (типа, AreaName- имя
файловой области) будут получать соответствующие значения.

Циклы AreaLoop не могут быть вложены друг в друга, но могут в цикл while.

.topic LR_Op_FileLoop
 {Цикл FileLoop:LR_Op_FileLoop}▄
  ▀▀▀▀▀▀▀▀▀▀▀▀▀

 // FileLoop
 ... Последовательность операторов тела цикла ...
 // EndFileLoop

Тело цикла будет выполнено для каждого файла внутри текущей файловой
области (т.е. цикл FileLoop обязательно должен быть вложен в цикл
AreaLoop).

На каждом проходе ряд предопределенных переменных (типа, FileName-
имя текущего файла) будут получать соответствующие значения.

Циклы FileLoop не могут быть вложены друг в друга, но могут в цикл while.

.topic LR_Op_Break
 {Оператор Break:LR_Op_Break}▄
  ▀▀▀▀▀▀▀▀▀▀▀▀▀▀

 // Break

Вызывает преход на оператор, следующий за закрывающим оператором самого
внутреннего цикла While, AreaLoop или FileLoop.

Расширеная форма оператора:

 // Break <number>

Вызывает выход из <number> вложеных циклов.

.topic LR_Op_Include
 {Оператор Include:LR_Op_Include}▄
  ▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀

 // Include <filename>

Включает в текст скрипта вместо себя содержимое текстового файла
<filename>.

.topic LR_Op_PrintFile
 {Оператор PrintFile:LR_Op_PrintFile}▄
  ▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀

 // PrintFile <filename>

Печатает содержимое файла <filename> в выходной поток "как есть".

.topic LR_Op_Redirect
 {Оператор Redirect:LR_Op_Redirect}▄
  ▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀

 // Redirect <string-expr>

Закрывает текущий выходной файл, и пытается создать файл с именем, равным
результату вычисления выражения <string-expr> (результат должен иметь
тип String), после чего в этот файл будет осуществляться весь последующий
вывод.

Данный оператор удобно использовать для создания многофайловых отчётов,
когда, например, для каждой файловой области используется отдельный файл,
например:

// AreaLoop
// Redirect "Area_" + IntToStr(AreaNo) + ".txt"

Оператор Redirect игнорируется в PKT-режиме построения файл-листа или
отчёта.

.topic LR_Op_NewArea
 {Оператор NewArea:LR_Op_NewArea}▄
  ▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀

Наряду с реальными файловыми областями, описаными в FileArea.Ctl и
физически существующие на жёстком диске или ином носителе, Hi-Files
поддерживает так называемые "виртуальные" области, существующие только в
Run-Time и не имеющие прямого отображения на физических носителях.

Такие области создаются из пользовательского скрипта оператором NewArea и
наполняются файловыми дескрипторами из других областей (реальных или
виртуальных) при помощи оператора {Copy:LR_Op_Copy}.

Форма оператора NewArea:

 // NewArea "Name" [Group "Group-Tag"] [Sorted]

Данный оператор создаёт новую (пустую) виртуальную область с именем
"Name". Необязательный параметр 'Group' указывает тег файловой группы, к
которой принадлежит данная область.

Если указан необязательный параметр 'Sorted', дескрипторы в этой области
будут упорядочены по именам файлов, в противном случае их порядок будет
соответствовать порядку их добавления в данную область.

Пример использования технологии виртуальных файловых областей содержится
в дистрибутивном скрипте 'AllFiles.Scr' для автоматического построения
списка файлов, доступных для фрека по алиасам.

.topic LR_Op_Copy
 {Оператор Copy:LR_Op_Copy}▄
  ▀▀▀▀▀▀▀▀▀▀▀▀▀

 // Copy "Target area name"

Данный оператор должен быть вложен в цикл {FileLoop:LR_Op_FileLoop} и
вызывает копирование текущего файлового дескриптора в область с именем
"Target area name". Если область не является виртуальной, либо дескриптор
для данного имени файла в ней уже существует, то Hi-Files зафиксирует
ошибку.

.topic LR_Op_Cancel
 {Оператор Cancel:LR_Op_Cancel}▄
  ▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀

// Cancel

Немедленно прерывает выполнение скрипта.

Если строился текстовый файл, то в случае прерывания уже созданная его
часть сохранится (со служебным сообщением в точке обрыва), если
порождался PKT-шник, то он исчезнет целиком.

; Copyright (c) 2002-2004 Dmitry Liman [2:461/79] <leemon@ua.fm>